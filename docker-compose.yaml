services:
  server:
    build:
      context: .
      dockerfile: ./API/API.Dockerfile
    restart: always
    networks:
      - app-network
    volumes:
      - ./API:/app
      - ./db:/app/db
      - ./config.py:/app/config.py
      - ./schemas:/app/schemas
    env_file: .env
    ports:
      - 8000:8000
    depends_on:
      db: 
        condition: service_healthy
  # bot:
  #   ...
  db:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "${POSTGRES_OUTER_PORT}:${POSTGRES_INNER_PORT}"
    networks:
      - app-network
    volumes:
      - ./db/init:/docker-entrypoint-initdb.d:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5




networks:
  app-network:
    driver: bridge
    